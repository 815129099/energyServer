com.text=hello world
com.name=${com.text}啦啦啦啦
#日志
debug=true

#spring.datasource.url = jdbc:mysql://10.30.100.126:3306/erbs?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
spring.datasource.url = jdbc:mysql://10.30.100.110:3306/erbs?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring.datasource.username = root
spring.datasource.password = Sa123456
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver

# DataSource Config   mybatis-plus
mybatis-plus.mapper-locations=classpath:mapper/**/*.xml
mybatis-plus.type-aliases-package=com.example.demo.entity

#  **表示可以表示任意多级目录
#  *表示多个任意字符
#指定bean所在包
mybatis.type-aliases-package=com.example.demo.entity
#指定映射文件
mybatis.mapperLocations=classpath:mapper/**/*.xml

#热部署生效
#关闭缓存，即时刷新
spring.freemarker.cache=false
#开启模板缓存（默认值：true）
spring.thymeleaf.cache=false
spring.devtools.restart.enabled=true
#下面文件夹下的文件会即时刷新
spring.devtools.restart.additional-paths=src/main/java
#排除那个目录的文件不需要restart
#spring.devtools.restart.exclude=static/**,public/**


# THYMELEAF (ThymeleafAutoConfiguration)
#Check that the template exists before rendering it.
spring.thymeleaf.check-template=true 
#检查模板位置是否正确（默认值:true）
spring.thymeleaf.check-template-location=true
#Content-Type的值（默认值：text/html）
spring.thymeleaf.content-type=text/html
#开启MVC Thymeleaf视图解析（默认值：true）
spring.thymeleaf.enabled=true
#模板编码
spring.thymeleaf.encoding=UTF-8
#要被排除在解析之外的视图名称列表，用逗号分隔
spring.thymeleaf.excluded-view-names=
#要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
#spring.thymeleaf.mode=HTML5
spring.thymeleaf.mode =LEGACYHTML5
#在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
spring.thymeleaf.prefix=classpath:/templates/
#在构建URL时添加到视图名称后的后缀（默认值：.html）
spring.thymeleaf.suffix=.html
#Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
#spring.thymeleaf.template-resolver-order=
#可解析的视图名称列表，用逗号分隔
#spring.thymeleaf.view-names=
# 默认值为 /**
#spring.mvc.static-path-pattern=/ssm/**
# 默认值为 classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
#spring.resources.static-locations=classpath:/resources/static/

server.port=8088

#引入日志
logging:
config: classpath:log4j2.yml 

#邮件
spring.mail.host=smtp.qq.com
spring.mail.username=815129099@qq.com
#密码/客户端授权码
spring.mail.password=tcdhwqprimjvbffi
#编码字符
spring.mail.smtp.defaultEncoding=utf-8
#是否进行用户名密码校验
spring.mail.properties.mail.smtp.auth=true 
#设置超时时间
spring.mail.smtp.timeout=20000

#spring.mail.properties.mail.smtp.starttls.enable: true
#spring.mail.properties.mail.smtp.starttls.required: true

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#Redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=10.30.100.110
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=960521
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000 